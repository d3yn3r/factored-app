{"ast":null,"code":"export { Login };\nasync function Login(email, password) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    },\n    body: JSON.stringify(`grant_type=&username=${email}&password=${password}&scope=&client_id=&client_secret=`)\n  };\n  const response = await fetch(\"http://localhost:8000/api/token\", requestOptions);\n  const data = await response.json();\n  if (!response.ok) {\n    console.log(data.detail);\n  } else {\n    return data.access_token;\n  }\n}\n_c = Login;\nasync function Register(name, email, companyPosition, password) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    },\n    body: JSON.stringify({\n      name,\n      email,\n      company_position: companyPosition,\n      hashed_password: password\n    })\n  };\n  const response = await fetch(\"http://localhost:8000/api/users\", requestOptions);\n  const data = await response.json();\n  if (!response.ok) {\n    console.log(data.detail);\n  } else {\n    return data.access_token;\n  }\n}\n_c2 = Register;\nvar _c, _c2;\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"Register\");","map":{"version":3,"names":["Login","email","password","requestOptions","method","headers","body","JSON","stringify","response","fetch","data","json","ok","console","log","detail","access_token","_c","Register","name","companyPosition","company_position","hashed_password","_c2","$RefreshReg$"],"sources":["C:/Users/deine/Desktop/Login/frontend/src/services/Login.service.js"],"sourcesContent":["export{\r\n    Login\r\n}\r\n\r\nasync function Login(email, password){\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\"Content-Type\": \"application/x-www-form-urlencoded\"},\r\n        body: JSON.stringify(`grant_type=&username=${email}&password=${password}&scope=&client_id=&client_secret=`)\r\n    };\r\n\r\n    const response = await fetch(\"http://localhost:8000/api/token\", requestOptions);\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n        console.log(data.detail)\r\n    } else {\r\n        return data.access_token;\r\n    }\r\n}\r\n\r\n\r\nasync function Register(name,email,companyPosition,password){\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\"Content-Type\": \"application/x-www-form-urlencoded\"},\r\n        body: JSON.stringify({name,email, company_position:companyPosition,hashed_password:password})\r\n    };\r\n\r\n    const response = await fetch(\"http://localhost:8000/api/users\", requestOptions);\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n        console.log(data.detail)\r\n    } else {\r\n        return data.access_token;\r\n    }\r\n}\r\n"],"mappings":"AAAA,SACIA,KAAK;AAGT,eAAeA,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAC;EACjC,MAAMC,cAAc,GAAG;IACnBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAC,cAAc,EAAE;IAAmC,CAAC;IAC9DC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAE,wBAAuBP,KAAM,aAAYC,QAAS,mCAAkC;EAC9G,CAAC;EAED,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAEP,cAAc,CAAC;EAC/E,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAElC,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;IACdC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACK,MAAM,CAAC;EAC5B,CAAC,MAAM;IACH,OAAOL,IAAI,CAACM,YAAY;EAC5B;AACJ;AAACC,EAAA,GAfclB,KAAK;AAkBpB,eAAemB,QAAQA,CAACC,IAAI,EAACnB,KAAK,EAACoB,eAAe,EAACnB,QAAQ,EAAC;EACxD,MAAMC,cAAc,GAAG;IACnBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAC,cAAc,EAAE;IAAmC,CAAC;IAC9DC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACY,IAAI;MAACnB,KAAK;MAAEqB,gBAAgB,EAACD,eAAe;MAACE,eAAe,EAACrB;IAAQ,CAAC;EAChG,CAAC;EAED,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAEP,cAAc,CAAC;EAC/E,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAElC,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;IACdC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACK,MAAM,CAAC;EAC5B,CAAC,MAAM;IACH,OAAOL,IAAI,CAACM,YAAY;EAC5B;AACJ;AAACO,GAAA,GAfcL,QAAQ;AAAA,IAAAD,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}